[{"/Applications/MAMP/htdocs/git-react-project/nd0191-c1-myreads/src/index.js":"1","/Applications/MAMP/htdocs/git-react-project/nd0191-c1-myreads/src/App.js":"2","/Applications/MAMP/htdocs/git-react-project/nd0191-c1-myreads/src/BooksAPI.js":"3","/Applications/MAMP/htdocs/git-react-project/nd0191-c1-myreads/src/Components/Shelves.js":"4","/Applications/MAMP/htdocs/git-react-project/nd0191-c1-myreads/src/Components/SingleBook.js":"5","/Applications/MAMP/htdocs/git-react-project/nd0191-c1-myreads/src/Components/BookShelf.js":"6"},{"size":219,"mtime":1664024836237,"results":"7","hashOfConfig":"8"},{"size":3761,"mtime":1664090175327,"results":"9","hashOfConfig":"8"},{"size":1055,"mtime":1663714904314,"results":"10","hashOfConfig":"8"},{"size":754,"mtime":1663870354306,"results":"11","hashOfConfig":"8"},{"size":1607,"mtime":1664090176943,"results":"12","hashOfConfig":"8"},{"size":644,"mtime":1663869057203,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10g5rcm",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Applications/MAMP/htdocs/git-react-project/nd0191-c1-myreads/src/index.js",[],[],"/Applications/MAMP/htdocs/git-react-project/nd0191-c1-myreads/src/App.js",["34"],[],"import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport Shelves from \"./Components/Shelves\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport SingleBook from \"./Components/SingleBook\";\nimport {BrowserRouter, Routes, Route, Link} from \"react-router-dom\";\n\n\nfunction App() {\n  const [books,setBooks] = useState([]);\n  // const [showSearchPage, setShowSearchpage] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [searchBooks,setSearchBooks] = useState([]);\n  const [booksMapId, setBooksMapId] = useState(new Map())\n  const [sameMergedBooks, setSameMergedBooks] = useState([]);\n\n\n  useEffect(()=>{\n    BooksAPI.getAll().then(data=> {\n      setBooks(data);\n      // console.log(data);\n      setBooksMapId(createBooksMap(data));\n    })\n  },[]);\n\n  useEffect(()=>{\n    let searchIsActive = true;\n    if(search){\n      BooksAPI.search(search).then(data=>{\n        if(data.error){\n          // console.log('Nothing Found');\n          setSearchBooks([]);\n        }else{\n          if(searchIsActive){\n            // console.log(data);\n            setSearchBooks(data);\n          }\n        }\n      });\n    }\n    return (data)=> {\n      searchIsActive = false;\n      setSearchBooks([]);\n      // console.log(\"unmount data\", data);\n    }\n  },[search]);\n\n  useEffect(()=>{\n    const sameBooks = searchBooks.map((filterBook)=>{\n      if(booksMapId.has(filterBook.id)){\n        return booksMapId.get(filterBook.id);\n      }else{\n        return filterBook;\n      }\n    })\n    setSameMergedBooks(sameBooks);\n  },[searchBooks]);\n\n  \n\n\n  const createBooksMap = (books)=>{\n    const booksMap = new Map();\n    books.map((book)=> booksMap.set(book.id, book));\n    return booksMap;\n\n  }\n\n\nconst changeReadingStatus = (singleBook, newReadingStatus)=>{\n   const updateBooks = books.map((b)=>{\n    if(b.id === singleBook.id){\n      singleBook.shelf = newReadingStatus;\n      return singleBook;\n    }\n    return b;\n   });\n   setBooks(updateBooks);\n   BooksAPI.update(singleBook, newReadingStatus).then(data=>data);\n\n   if(!booksMapId.has(singleBook.id) && !singleBook.shelf){\n    singleBook.shelf = newReadingStatus;\n    updateBooks.push(singleBook);\n   }\n}\n\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <Routes>\n        <Route path=\"/search\" element={\n        <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <Link\n              to=\"/\"\n              className=\"close-search\"\n            >\n              Close\n            </Link>\n            <div className=\"search-books-input-wrapper\">\n              <input\n                type=\"text\"\n                placeholder=\"Search by title, author, or ISBN\"\n                value={search}\n                onChange={(event)=>setSearch(event.target.value)}/>\n            </div>\n          </div>\n          <div className=\"search-books-results\">\n            <ol className=\"books-grid\">\n            {sameMergedBooks.map((searchBook)=> \n                    <li key={searchBook.id}>\n                        <SingleBook singleBook={searchBook} changeReadingStatus={changeReadingStatus}/>\n                    </li>\n                    )}\n            </ol>\n          </div>\n        </div>\n        }/>\n\n        <Route path=\"/\" element={\n        <div className=\"list-books\">\n          <div className=\"list-books-title\">\n            <h1>MyReads</h1>\n          </div>\n          <div className=\"list-books-content\">\n            <div>\n              <Shelves books={books} changeReadingStatus={changeReadingStatus}/>\n            </div>\n          </div>\n          <div className=\"open-search\">\n            <Link to=\"/search\">Add a book</Link>\n          </div>\n        </div>\n        }/>\n        </Routes>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n",[],"/Applications/MAMP/htdocs/git-react-project/nd0191-c1-myreads/src/BooksAPI.js",[],[],"/Applications/MAMP/htdocs/git-react-project/nd0191-c1-myreads/src/Components/Shelves.js",[],[],"/Applications/MAMP/htdocs/git-react-project/nd0191-c1-myreads/src/Components/SingleBook.js",[],[],"/Applications/MAMP/htdocs/git-react-project/nd0191-c1-myreads/src/Components/BookShelf.js",[],[],{"ruleId":"35","severity":1,"message":"36","line":57,"column":5,"nodeType":"37","endLine":57,"endColumn":18,"suggestions":"38"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'booksMapId'. Either include it or remove the dependency array.","ArrayExpression",["39"],{"desc":"40","fix":"41"},"Update the dependencies array to be: [booksMapId, searchBooks]",{"range":"42","text":"43"},[1530,1543],"[booksMapId, searchBooks]"]